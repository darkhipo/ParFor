typedef typeof (((int *)0) - ((int *)0)) ptrdiff_t;
typedef typeof (sizeof(int)) size_t;
typedef unsigned short wchar_t;
typedef int wint_t;
typedef __builtin_va_list va_list;
typedef __builtin_va_list __gnuc_va_list;
struct _iobuf {
    char *_ptr;
    int _cnt;
    char *_base;
    int _flag;
    int _file;
    int _charbuf;
    int _bufsiz;
    char *_tmpfname;
};
typedef struct _iobuf FILE;
extern FILE _iob[];
FILE *fopen(char const *, char const *);
FILE *freopen(char const *, char const *, FILE *);
int fflush(FILE *);
int fclose(FILE *);
int remove(char const *);
int rename(char const *, char const *);
FILE *tmpfile();
char *tmpnam(char *);
char *_tempnam(char const *, char const *);
int _rmtmp();
int _unlink(char const *);
char *tempnam(char const *, char const *);
int rmtmp();
int unlink(char const *);
int setvbuf(FILE *, char *, int, size_t);
void setbuf(FILE *, char *);
extern int __mingw_fprintf(FILE *, char const *, ...);
extern int __mingw_printf(char const *, ...);
extern int __mingw_sprintf(char *, char const *, ...);
extern int __mingw_snprintf(char *, size_t, char const *, ...);
extern int __mingw_vfprintf(FILE *, char const *, __gnuc_va_list);
extern int __mingw_vprintf(char const *, __gnuc_va_list);
extern int __mingw_vsprintf(char *, char const *, __gnuc_va_list);
extern int __mingw_vsnprintf(char *, size_t, char const *, __gnuc_va_list);
int fprintf(FILE *, char const *, ...);
int printf(char const *, ...);
int sprintf(char *, char const *, ...);
int vfprintf(FILE *, char const *, __gnuc_va_list);
int vprintf(char const *, __gnuc_va_list);
int vsprintf(char *, char const *, __gnuc_va_list);
int __msvcrt_fprintf(FILE *, char const *, ...);
int __msvcrt_printf(char const *, ...);
int __msvcrt_sprintf(char *, char const *, ...);
int __msvcrt_vfprintf(FILE *, char const *, __gnuc_va_list);
int __msvcrt_vprintf(char const *, __gnuc_va_list);
int __msvcrt_vsprintf(char *, char const *, __gnuc_va_list);
int _snprintf(char *, size_t, char const *, ...);
int _vsnprintf(char *, size_t, char const *, __gnuc_va_list);
int _vscprintf(char const *, __gnuc_va_list);
int snprintf(char *, size_t, char const *, ...);
int vsnprintf(char *, size_t, char const *, __gnuc_va_list);
int vscanf(char const *restrict, __gnuc_va_list);
int vfscanf(FILE *restrict, char const *restrict, __gnuc_va_list);
int vsscanf(char const *restrict, char const *restrict, __gnuc_va_list);
int fscanf(FILE *, char const *, ...);
int scanf(char const *, ...);
int sscanf(char const *, char const *, ...);
int fgetc(FILE *);
char *fgets(char *, int, FILE *);
int fputc(int, FILE *);
int fputs(char const *, FILE *);
char *gets(char *);
int puts(char const *);
int ungetc(int, FILE *);
int _filbuf(FILE *);
int _flsbuf(int, FILE *);
extern inline int getc(FILE *__F) {
    return (--__F->_cnt >= 0) ? (int)(unsigned char)*__F->_ptr++ : _filbuf(__F);
}


extern inline int putc(int __c, FILE *__F) {
    return (--__F->_cnt >= 0) ? (int)(unsigned char)(*__F->_ptr++ = (char)__c) : _flsbuf(__c, __F);
}


extern inline int getchar() {
    return (--(&_iob[0])->_cnt >= 0) ? (int)(unsigned char)*(&_iob[0])->_ptr++ : _filbuf((&_iob[0]));
}


extern inline int putchar(int __c) {
    return (--(&_iob[1])->_cnt >= 0) ? (int)(unsigned char)(*(&_iob[1])->_ptr++ = (char)__c) : _flsbuf(__c, (&_iob[1]));
}


size_t fread(void *, size_t, size_t, FILE *);
size_t fwrite(void const *, size_t, size_t, FILE *);
int fseek(FILE *, long, int);
long ftell(FILE *);
void rewind(FILE *);
typedef long long fpos_t;
int fgetpos(FILE *, fpos_t *);
int fsetpos(FILE *, fpos_t const *);
int feof(FILE *);
int ferror(FILE *);
void clearerr(FILE *);
void perror(char const *);
FILE *_popen(char const *, char const *);
int _pclose(FILE *);
FILE *popen(char const *, char const *);
int pclose(FILE *);
int _flushall();
int _fgetchar();
int _fputchar(int);
FILE *_fdopen(int, char const *);
int _fileno(FILE *);
int _fcloseall();
FILE *_fsopen(char const *, char const *, int);
int _getmaxstdio();
int _setmaxstdio(int);
int fgetchar();
int fputchar(int);
FILE *fdopen(int, char const *);
int fileno(FILE *);
typedef long __time32_t;
typedef long long __time64_t;
typedef __time32_t time_t;
typedef long _off_t;
typedef _off_t off_t;
typedef unsigned int _dev_t;
typedef _dev_t dev_t;
typedef short _ino_t;
typedef _ino_t ino_t;
typedef int _pid_t;
typedef _pid_t pid_t;
typedef unsigned short _mode_t;
typedef _mode_t mode_t;
typedef int _sigset_t;
typedef _sigset_t sigset_t;
typedef long _ssize_t;
typedef _ssize_t ssize_t;
typedef long long fpos64_t;
typedef long long off64_t;
typedef unsigned int useconds_t;
extern inline FILE *fopen64(char const *filename, char const *mode) {
    return fopen(filename, mode);
}


int fseeko64(FILE *, off64_t, int);
extern inline off64_t ftello64(FILE *stream) {
    fpos_t pos;
    if (fgetpos(stream, &pos))
        return -1LL;
    else
        return ((off64_t)pos);
}


int fwprintf(FILE *, wchar_t const *, ...);
int wprintf(wchar_t const *, ...);
int _snwprintf(wchar_t *, size_t, wchar_t const *, ...);
int vfwprintf(FILE *, wchar_t const *, __gnuc_va_list);
int vwprintf(wchar_t const *, __gnuc_va_list);
int _vsnwprintf(wchar_t *, size_t, wchar_t const *, __gnuc_va_list);
int _vscwprintf(wchar_t const *, __gnuc_va_list);
int fwscanf(FILE *, wchar_t const *, ...);
int wscanf(wchar_t const *, ...);
int swscanf(wchar_t const *, wchar_t const *, ...);
wint_t fgetwc(FILE *);
wint_t fputwc(wchar_t, FILE *);
wint_t ungetwc(wchar_t, FILE *);
int swprintf(wchar_t *, wchar_t const *, ...);
int vswprintf(wchar_t *, wchar_t const *, __gnuc_va_list);
wchar_t *fgetws(wchar_t *, int, FILE *);
int fputws(wchar_t const *, FILE *);
wint_t getwc(FILE *);
wint_t getwchar();
wchar_t *_getws(wchar_t *);
wint_t putwc(wint_t, FILE *);
int _putws(wchar_t const *);
wint_t putwchar(wint_t);
FILE *_wfdopen(int, wchar_t const *);
FILE *_wfopen(wchar_t const *, wchar_t const *);
FILE *_wfreopen(wchar_t const *, wchar_t const *, FILE *);
FILE *_wfsopen(wchar_t const *, wchar_t const *, int);
wchar_t *_wtmpnam(wchar_t *);
wchar_t *_wtempnam(wchar_t const *, wchar_t const *);
int _wrename(wchar_t const *, wchar_t const *);
int _wremove(wchar_t const *);
void _wperror(wchar_t const *);
FILE *_wpopen(wchar_t const *, wchar_t const *);
int snwprintf(wchar_t *s, size_t n, wchar_t const *format, ...);
int vsnwprintf(wchar_t *s, size_t n, wchar_t const *format, __gnuc_va_list arg);
int vwscanf(wchar_t const *restrict, __gnuc_va_list);
int vfwscanf(FILE *restrict, wchar_t const *restrict, __gnuc_va_list);
int vswscanf(wchar_t const *restrict, wchar_t const *restrict, __gnuc_va_list);
FILE *wpopen(wchar_t const *, wchar_t const *);
wint_t _fgetwchar();
wint_t _fputwchar(wint_t);
int _getw(FILE *);
int _putw(int, FILE *);
wint_t fgetwchar();
wint_t fputwchar(wint_t);
int getw(FILE *);
int putw(int, FILE *);
int main(int count, char **args) {
    int i = 0;
    for (i = 0; i < 10; i++) {
        printf("Hello World %d\n", i);
    }
}


